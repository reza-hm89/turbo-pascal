procedure save_score;
var
   fp:file of score;
   sc:score;
   sc2:score;
   i:integer;
begin
     assign(fp,'c:\score.dat');
     reset(fp);
     read(fp,sc);
     for i:=2 to 8 do
     begin
          sc2.sco[1][i]:=sc.sco[1][i];
          sc2.sco[2][i]:=sc.sco[2][i];
     end;
     case n of
     2:begin
          if (min<=sc.sco[1][2]) and (s<sc.sco[2][2])or ((sc.sco[1][2]=0) and (sc.sco[2][2]=0))then begin
             sc2.sco[1][2]:=min;
             sc2.sco[2][2]:=s
             end;
          end;
     3:begin
            if (min<=sc.sco[1][3]) and (s<sc.sco[2][3])or((sc.sco[1][3]=0) and (sc.sco[2][3]=0)) then begin
             sc2.sco[1][3]:=min;
             sc2.sco[2][3]:=s
             end;
            end;
     4:begin
            if (min<=sc.sco[1][4]) and (s<sc.sco[2][4])or((sc.sco[1][4]=0) and (sc.sco[2][4]=0)) then begin
             sc2.sco[1][4]:=min;
             sc2.sco[2][4]:=s
             end;
            end;
     5:begin
            if (min<=sc.sco[1][5]) and (s<sc.sco[2][5])and(sc.sco[1][5]<>0) and (sc.sco[2][5]<>0) then begin
             sc2.sco[1][5]:=min;
             sc2.sco[2][5]:=s
             end;
            end;
     6:begin
            if (min<=sc.sco[1][6]) and (s<sc.sco[2][6])and(sc.sco[1][6]<>0) and (sc.sco[2][6]<>0) then begin
             sc2.sco[1][6]:=min;
             sc2.sco[2][6]:=s
             end;
            end;
     7:begin
            if (min<=sc.sco[1][7]) and (s<sc.sco[2][7])and(sc.sco[1][7]<>0) and (sc.sco[2][7]<>0) then begin
             sc2.sco[1][7]:=min;
             sc2.sco[2][7]:=s
             end;
            end;
     8:begin
            if (min<=sc.sco[1][8]) and (s<sc.sco[2][8])and (sc.sco[1][8]<>0) and (sc.sco[2][8]<>0) then begin
             sc2.sco[1][8]:=min;
             sc2.sco[2][8]:=s
             end;
            end;
     end;
     rewrite(fp);
     write(fp,sc2);
     close(fp);
end;
{***************************************************************************}
procedure load_game;
var
   i,j:integer;
   ar2:arr;
   fp:file of arr;
   fp2:file of param;
   p3:param;
begin
    cleardevice;
    setcolor(1);
    settextstyle(7,0,5);
    outtextxy(180,160,' Loading');
    delay(700);
    outtextxy(180,160,' Loading.');
    delay(700);
    outtextxy(180,160,' Loading..');
    delay(700);
    outtextxy(180,160,' Loading...');
    delay(500);
    settextstyle(0,0,0);
    assign(fp,'c:\data.dat');
    reset(fp);
    read(fp,ar2);
    for i:=1 to 15 do
        for j:=1 to 15 do
        b[i][j]:=ar2.arsl[i][j];
    close(fp);
    assign(fp2,'c:\n.dat');
    reset(fp2);
    read(fp2,p3);
    n:=p3.a[1];
    min:=p3.a[2];
    s:=p3.a[3];
    close(fp2);
end;